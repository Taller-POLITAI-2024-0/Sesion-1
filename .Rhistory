knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::include_graphics("./images/politai.jpg")  # Para plotear cualquier imagen
# Puedes centrar, aumentar o disminuir el tamaño del gráfico (buscar códigos en internet)
knitr::include_graphics("./images/R_RStudiologo.jpg")
knitr::include_graphics("./images/interface.jpg")
cars
head(cars)
names(cars)
str(cars)
mean(c(1,2,3,4,5))
media <- mean(c(1,2,3,4,5,6))
dataair <- airquality
boxplot(airquality)
#install.packages("tinytex")
library(tidyverse)  # Necesario para llamar al dataset
# Sin este numeral, no se podría comentar
# ni ejecutar los códigos en este code chunk
names(starwars) # Nombres de la data
# Code chunk básico
# echo = FALSE <- No muestra el código, pero sí su resultado
# (conveniente para gráficos, mapas, etc.)
# Por ejemplo:
plot(cars)
# Compruebalo al Knitear este informe:
#library(scatterplot3d)
#(f <- scatterplot3d(airquality[,c('Ozone', 'Wind', 'Month')]))
# Por ejemplo:
library(scatterplot3d)
(f <- scatterplot3d(airquality[,c('Ozone', 'Wind', 'Month')]))
names(starwars)
#install.packages("tidyverse")
library(dplyr)
library(ggplot2)
library(tidyr)
library(purrr)
library(knitr)
# instalar e invocar paquetes:
pacman::p_load(dplyr, ggplot2, tidyr, purrr, knitr)
# Hicimos todo lo anterior solo en una linea de codigo.
knitr::include_graphics("./images/sintaxis.jpg")
3
9*5
7+6
7+6 > 45
c(9, 9*5)
c("mes", "un mes")
c(9*5, "mes")
a <- 7 + 6
a
5 + 1 -> b
b
h <- a+b
h
a + b + 6
typeof(h) # Tipo de los elementos
length(h) # Cuantos elementos hay en el vector
#un número=3
g <- 1 + 2
#dos números=c(1,2)
d <- c(1, 2)
#c es un vector numérico
class(g)
#Cada elemento de d x 2
d*2
vect0 <- c(1, 3, 4)
vect0
vect1 <- vect0 + 12
vect1 # Los vectores se suman en parelelo
vect2 <- vect0 + (12:14)
vect2 # Los vectores se suman en parelelo
cuan1 <- "genteeeeeee,"
cuan2 <- "ahora, sí se acabó el recreo"
cuanti <- paste(cuan1, cuan2)
print(cuanti)
ejemplo <- c("Y", "la", "queso", 3,
"Y", "la", "queso", 3,
"Y", "la", "queso", 3)
ejemplo
class(ejemplo)
table(ejemplo)
resultados <- c(TRUE, TRUE, FALSE, FALSE)
class(resultados)
# una abreviación para TRUE es T y para FALSE es F
aprueba_examen = T
reprueba_examen = F
# if(vector lógico){en caso TRUE}else{en caso FALSE}
if(aprueba_examen) {"Felicitaciones"}else{"Más suerte a la próxima"}
if (reprueba_examen) {"Felicitaciones"}else{"Más suerte a la próxima"}
aprueba_examen == reprueba_examen
aprueba_examen > reprueba_examen
class(8)
class("UNMSM")
class(TRUE)
df <- data.frame(
persona = c("Joel", "Santiago", "María Pía", "Pavel"),
nota = c(15, 17, 20, 16),
aprueba = c(F, T, T, T))
df
df$mensaje <- ifelse(df$aprueba,
"Felicitaciones",
"Más suerte a la próxima")
df
knitr::include_graphics("./images/programando.jpg")
#| echo: true
#| fig-width: 10
#| fig-height: 4.5
library(ggplot2)
ggplot(mtcars, aes(hp, mpg, color = am)) +
geom_point() +
geom_smooth(formula = y ~ x, method = "loess")
knitr::kable(head(mtcars)[,c("mpg",	"cyl", "disp", "hp", "wt")])
library(ggplot2)
ggplot(mtcars, aes(hp, mpg, color = am)) +
geom_point() +
geom_smooth(formula = y ~ x, method = "loess")
knitr::kable(mtcars)
#| echo: false
#| fig-height: 5
library(leaflet)
install.packages("leaflet")
install.packages("leaflet")
if (!require('devtools')) install.packages('devtools')
devtools::install_github('rstudio/leaflet')
devtools::install_github("rstudio/leaflet")
knitr::include_graphics("./images/R_RStudiologo.jpg")
- *Después de lo que se ha expuesto, les animo a que continúen explorando R y sus diversos usos a través de diferentes fuentes, siendo este curso una de ellas.*
